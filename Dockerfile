# Build stage
FROM aws.registry.trendmicro.com/etscache/library/golang@sha256:61dafe97cc20b12faef7a744a1a3e43411c45b9908c3ccf9cadd05566e473e1d as build_env

ARG JFROG_USER_EMAIL
ARG JFROG_API_KEY
ARG JFROG_GO_REGISTRY_PREFIX
ARG REGISTRY_ALL_AMAAS_GO_SUBDIR
ARG REGISTRY_LOCAL_AMAAS_GO_SUBDIR
ARG AMAAS_GO_MODULE_VERSION_ID

WORKDIR /tmp


# Dependencies

RUN apt-get update && apt-get install -y --no-install-recommends \
    protobuf-compiler \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
    
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28 && \
    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2


# Install JFrog CLI

RUN wget -qO - https://releases.jfrog.io/artifactory/jfrog-gpg-public/jfrog_public_gpg.key | apt-key add - \
    && echo "deb https://releases.jfrog.io/artifactory/jfrog-debs xenial contrib" | tee -a /etc/apt/sources.list \
    && apt update && apt install -y --no-install-recommends jfrog-cli-v2-jf \
    && rm -rf /var/lib/apt/lists/*

ENV CI=true

RUN jf config add rt-server --url ${JFROG_GO_REGISTRY_PREFIX} \
    --user ${JFROG_USER_EMAIL} --password ${JFROG_API_KEY} \
    --artifactory-url ${JFROG_GO_REGISTRY_PREFIX} \
    && \
    jf go-config --global --repo-deploy ${REGISTRY_LOCAL_AMAAS_GO_SUBDIR} --repo-resolve ${REGISTRY_ALL_AMAAS_GO_SUBDIR} \
    --server-id-deploy rt-server --server-id-resolve rt-server


# Copy source code

ADD src/ amaas-go-module/
ADD scan.proto .


# Compile protobuf to generate stubs

WORKDIR /tmp/amaas-go-module
RUN mkdir -p client/base
RUN protoc --go_out=client/base --go-grpc_out=client/base \
    --go_opt=paths=source_relative --go-grpc_opt=paths=source_relative \
    -I/tmp /tmp/scan.proto


# Verify go module dependencies - must use "amaas-go-all" to access public packages

ENV GOPROXY=https://${JFROG_USER_EMAIL}:${JFROG_API_KEY}@jfrog.trendmicro.com/artifactory/api/go/amaas-go-all
ENV GONOSUMDB=github.com/trendmicro/*

# Run unit tests  with "test" directory located at /tmp/test

WORKDIR /tmp/amaas-go-module/client
RUN go mod verify
RUN mkdir -p ../../test && export AMAAS_UNIT_TEST_GOLANG_DIR=../../test && go test -v


# Create a local git repo for tagging and publishing.

RUN rm -f *_test.go .DS* ../.DS*

RUN git config --global user.email "${JFROG_USER_EMAIL}" && \
    git init && git add . && \
    git commit -m "To-publish version v${AMAAS_GO_MODULE_VERSION_ID}" && \
    git tag v${AMAAS_GO_MODULE_VERSION_ID}


# Publish SDK

WORKDIR /tmp/amaas-go-module
RUN jf gp v${AMAAS_GO_MODULE_VERSION_ID} --server-id rt-server


# Also build the tools included in the SDK to make sure everything works

RUN make build


# Remove credential file just in case

RUN rm -rf ~/.jfrog*
